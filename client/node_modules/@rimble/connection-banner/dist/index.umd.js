(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react'), require('prop-types'), require('@rimble/utils'), require('rimble-ui')) :
  typeof define === 'function' && define.amd ? define('@rimble/connection-banner', ['react', 'prop-types', '@rimble/utils', 'rimble-ui'], factory) :
  (global = global || self, global['@rimble/connection-banner'] = factory(global.React, global.PropTypes, global.RimbleUtils, global.RimbleUi));
}(this, function (React, PropTypes, RimbleUtils, rimbleUi) { 'use strict';

  var React__default = 'default' in React ? React['default'] : React;
  PropTypes = PropTypes && PropTypes.hasOwnProperty('default') ? PropTypes['default'] : PropTypes;
  RimbleUtils = RimbleUtils && RimbleUtils.hasOwnProperty('default') ? RimbleUtils['default'] : RimbleUtils;

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError("Cannot call a class as a function");
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== "function" && superClass !== null) {
      throw new TypeError("Super expression must either be null or a function");
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true
      }
    });
    if (superClass) _setPrototypeOf(subClass, superClass);
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
      return o.__proto__ || Object.getPrototypeOf(o);
    };
    return _getPrototypeOf(o);
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  function _possibleConstructorReturn(self, call) {
    if (call && (typeof call === "object" || typeof call === "function")) {
      return call;
    }

    return _assertThisInitialized(self);
  }

  var WrongNetwork = function WrongNetwork(_ref) {
    var currentNetwork = _ref.currentNetwork,
        requiredNetwork = _ref.requiredNetwork,
        onWrongNetworkMessage = _ref.onWrongNetworkMessage;
    return React__default.createElement("div", null, onWrongNetworkMessage === null ? // Show default banner
    React__default.createElement(rimbleUi.Flash, {
      variant: 'danger'
    }, React__default.createElement(rimbleUi.Flex, {
      alignItems: "center"
    }, React__default.createElement(rimbleUi.Box, {
      pr: 3
    }, React__default.createElement(rimbleUi.Icon, {
      name: "Warning",
      size: "44"
    })), React__default.createElement(rimbleUi.Flex, {
      flexDirection: "column"
    }, React__default.createElement(rimbleUi.Text, {
      fontWeight: "bold",
      color: 'inherit'
    }, "Switch to the", ' ', RimbleUtils.getEthNetworkNameById(requiredNetwork), " network in", ' ', React__default.createElement(rimbleUi.Text, {
      color: 'inherit',
      fontWeight: 'inherit',
      display: ['none', 'none', 'inline-block', 'inline-block']
    }, "MetaMask"), React__default.createElement(rimbleUi.Text, {
      color: 'inherit',
      fontWeight: 'inherit',
      display: ['inline-block', 'inline-block', 'none', 'none']
    }, "Settings")), React__default.createElement(rimbleUi.Text, {
      color: 'inherit'
    }, "To use our blockchain features, you need to be on the", ' ', RimbleUtils.getEthNetworkNameById(requiredNetwork), " network. You're currently on", ' ', RimbleUtils.getEthNetworkNameById(currentNetwork), ".")))) : // Show custom banner
    onWrongNetworkMessage);
  };

  var NoNetwork = function NoNetwork(_ref2) {
    var noNetworkAvailableMessage = _ref2.noNetworkAvailableMessage;
    return React__default.createElement("div", null, noNetworkAvailableMessage === null ? React__default.createElement(rimbleUi.Flash, {
      variant: 'danger'
    }, React__default.createElement(rimbleUi.Flex, {
      alignItems: "center",
      justifyContent: "space-between"
    }, React__default.createElement(rimbleUi.Flex, {
      alignItems: "center",
      pr: '2'
    }, React__default.createElement(rimbleUi.Box, {
      pr: 3
    }, React__default.createElement(rimbleUi.Icon, {
      name: "Warning",
      size: "44"
    })), React__default.createElement(rimbleUi.Flex, {
      flexDirection: "column"
    }, React__default.createElement(rimbleUi.Text, {
      fontWeight: "bold",
      color: 'inherit'
    }, "Install the MetaMask browser extension to use our blockchain features in your current browser"))), React__default.createElement(rimbleUi.MetaMaskButton, {
      as: "a",
      href: "https://metamask.io/",
      target: "_blank"
    }, "Install MetaMask"))) : noNetworkAvailableMessage);
  };

  var NotWeb3Browser = function NotWeb3Browser(_ref3) {
    var notWeb3CapableBrowserMessage = _ref3.notWeb3CapableBrowserMessage;
    return React__default.createElement("div", null, notWeb3CapableBrowserMessage === null ? React__default.createElement(rimbleUi.Flash, {
      variant: 'danger'
    }, React__default.createElement(rimbleUi.Flex, {
      alignItems: "center"
    }, React__default.createElement(rimbleUi.Box, {
      pr: 3
    }, React__default.createElement(rimbleUi.Icon, {
      name: "Warning",
      size: "44"
    })), React__default.createElement(rimbleUi.Flex, {
      flexDirection: "column"
    }, React__default.createElement(rimbleUi.Text, {
      fontWeight: "bold",
      color: 'inherit'
    }, "Your browser doesn't support our blockchain features"), RimbleUtils.isMobileDevice() ? React__default.createElement(rimbleUi.Text, {
      color: 'inherit'
    }, "Try a mobile wallet browser like Status, Coinbase wallet or Cipher") : React__default.createElement(rimbleUi.Text, {
      color: 'inherit'
    }, "Switch to either Brave, FireFox, Opera, or Chrome to continue")))) : notWeb3CapableBrowserMessage);
  };

  var ConnectionBanner =
  /*#__PURE__*/
  function (_Component) {
    _inherits(ConnectionBanner, _Component);

    function ConnectionBanner() {
      var _getPrototypeOf2;

      var _this;

      _classCallCheck(this, ConnectionBanner);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ConnectionBanner)).call.apply(_getPrototypeOf2, [this].concat(args)));
      _this.state = {
        isCorrectNetwork: null
      };

      _this.checkCorrectNetwork = function () {
        var isCorrectNetwork = _this.props.currentNetwork === _this.props.requiredNetwork;

        if (isCorrectNetwork !== _this.state.isCorrectNetwork) {
          _this.setState({
            isCorrectNetwork: isCorrectNetwork
          });
        }
      };

      return _this;
    }

    _createClass(ConnectionBanner, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var browserIsWeb3Capable = RimbleUtils.browserIsWeb3Capable();
        this.setState({
          browserIsWeb3Capable: browserIsWeb3Capable
        });
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        if (this.props.currentNetwork && this.props.requiredNetwork) {
          this.checkCorrectNetwork();
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this$props = this.props,
            currentNetwork = _this$props.currentNetwork,
            requiredNetwork = _this$props.requiredNetwork,
            onWeb3Fallback = _this$props.onWeb3Fallback;
        var _this$props$children = this.props.children,
            notWeb3CapableBrowserMessage = _this$props$children.notWeb3CapableBrowserMessage,
            noNetworkAvailableMessage = _this$props$children.noNetworkAvailableMessage,
            onWrongNetworkMessage = _this$props$children.onWrongNetworkMessage;
        return React__default.createElement("div", null, this.state.browserIsWeb3Capable === false ? React__default.createElement(NotWeb3Browser, {
          notWeb3CapableBrowserMessage: notWeb3CapableBrowserMessage
        }) : onWeb3Fallback === true || currentNetwork === null ? React__default.createElement(NoNetwork, {
          noNetworkAvailableMessage: noNetworkAvailableMessage
        }) : this.state.isCorrectNetwork === false ? React__default.createElement(WrongNetwork, {
          currentNetwork: currentNetwork,
          requiredNetwork: requiredNetwork,
          onWrongNetworkMessage: onWrongNetworkMessage
        }) : null);
      }
    }]);

    return ConnectionBanner;
  }(React.Component);

  ConnectionBanner.propTypes = {
    currentNetwork: PropTypes.number,
    requiredNetwork: PropTypes.number,
    onWeb3Fallback: PropTypes.bool,
    children: PropTypes.shape({
      notWeb3CapableBrowserMessage: PropTypes.node,
      noNetworkAvailableMessage: PropTypes.node,
      onWrongNetworkMessage: PropTypes.node
    })
  };
  ConnectionBanner.defaultProps = {
    currentNetwork: null,
    requiredNetwork: null,
    onWeb3Fallback: false,
    children: {
      notWeb3CapableBrowserMessage: null,
      noNetworkAvailableMessage: null,
      onWrongNetworkMessage: null
    }
  };

  return ConnectionBanner;

}));
//# sourceMappingURL=index.umd.js.map
