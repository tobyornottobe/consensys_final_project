{"ast":null,"code":"import _regeneratorRuntime from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/toby/Desktop/H_FinalProject/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport { MetaMaskButton } from 'rimble-ui';\nimport { Button } from 'rimble-ui';\nimport smartphone from \"./img/smartphone.svg\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      storageValue: 1,\n      balance: 4,\n      web3: null,\n      accounts: null,\n      contract: null,\n      claimCount: 0,\n      claimAmount: 0,\n      loading: true\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, networkId, deployedNetwork, instance;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getWeb3();\n\n            case 3:\n              web3 = _context.sent;\n              console.log(web3); // Use web3 to get the user's accounts.\n\n              _context.next = 7;\n              return web3.eth.getAccounts();\n\n            case 7:\n              accounts = _context.sent;\n              _context.next = 10;\n              return web3.eth.net.getId();\n\n            case 10:\n              networkId = _context.sent;\n              deployedNetwork = SimpleStorageContract.networks[networkId];\n              instance = new web3.eth.Contract(SimpleStorageContract.abi, deployedNetwork && deployedNetwork.address); // Set web3, accounts, and contract to the state, and then proceed with an\n              // example of interacting with the contract's methods.\n\n              _this.setState({\n                web3: web3,\n                accounts: accounts,\n                contract: instance\n              }, _this.getFoundationCapital);\n\n              _context.next = 20;\n              break;\n\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](0);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.error(_context.t0);\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 16]]);\n    }));\n    _this.runExample =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, accounts, contract, response;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, accounts = _this$state.accounts, contract = _this$state.contract; // Stores a given value, 5 by default.\n\n              _context2.next = 3;\n              return contract.methods.set(5).send({\n                from: accounts[0]\n              });\n\n            case 3:\n              _context2.next = 5;\n              return contract.methods.get().call();\n\n            case 5:\n              response = _context2.sent;\n\n              // Update state with the result.\n              _this.setState({\n                storageValue: response\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.getFoundationCapital =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var testnet, walletAddress, web3, balance;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              testnet = 'https://ropsten.infura.io/';\n              walletAddress = '0x8690F1feff62008A396B31c2C3f380bD0Ca6d8b8';\n              _context3.next = 4;\n              return getWeb3(testnet);\n\n            case 4:\n              web3 = _context3.sent;\n              balance = web3.eth.getBalance(walletAddress); //Will give value in.\n\n              balance = web3.toDecimal(balance);\n              console.log(balance);\n\n              _this.setState({\n                storageValue: balance\n              });\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      console.log('this is:', this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // if (!this.state.web3) {\n      //   return <div>Loading Web3, accounts, and contract...</div>;\n      // }\n      function ConnectionBox() {\n        return React.createElement(\"div\", {\n          id: \"step1\",\n          className: \"floatright bluebox\",\n          hidden: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, \"Connect with MetaMask to claim your Universal Block Income\"), React.createElement(MetaMaskButton, {\n          onClick: function onClick(e) {\n            return console.log(\"connect Metamask btn clicked\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, \"Connect with MetaMask\"));\n      }\n\n      function ClaimBox() {\n        return React.createElement(\"div\", {\n          id: \"step2\",\n          className: \"floatright bluebox\",\n          hidden: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Your share\"), React.createElement(\"img\", {\n          className: \"phone\",\n          src: smartphone,\n          alt: \"phone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"You will get approx. \"), React.createElement(Button, {\n          onClick: function onClick(e) {\n            return console.log(\"claim btn clicked\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Claim your DAI\"));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"#UniversalBlockIncome\"), React.createElement(\"div\", {\n        className: \"floatleft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"tcenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Current foundation assets: \", React.createElement(\"span\", {\n        className: \"cyan capital\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.storageValue)), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"You need money? Claim it. Every 24h.\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"You want to help? Donate. Temporary or permanently.\")), window.web3 ? React.createElement(ClaimBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }) : React.createElement(ConnectionBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))) //end App\n      ;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/toby/Desktop/H_FinalProject/client/src/App.js"],"names":["React","Component","SimpleStorageContract","getWeb3","MetaMaskButton","Button","App","state","storageValue","balance","web3","accounts","contract","claimCount","claimAmount","loading","componentDidMount","console","log","eth","getAccounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","setState","getFoundationCapital","alert","error","runExample","methods","set","send","from","get","call","response","testnet","walletAddress","getBalance","toDecimal","ConnectionBox","e","ClaimBox","smartphone","window"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./utils/getWeb3\";\n\nimport { MetaMaskButton } from 'rimble-ui';\nimport { Button } from 'rimble-ui';\n\n\n\nimport smartphone from './img/smartphone.svg';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  state = {\n      storageValue: 1,\n      balance: 4,\n      web3: null,\n      accounts: null,\n      contract: null,\n      claimCount: 0,\n      claimAmount: 0,\n      loading: true\n\n    };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n      console.log(web3);\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n    //  this.setState({ account: accounts[0]})\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n        this.setState({ web3, accounts, contract: instance }, this.getFoundationCapital);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n\n    // Stores a given value, 5 by default.\n    await contract.methods.set(5).send({ from: accounts[0] });\n\n    // Get the value from the contract to prove it worked.\n    const response = await contract.methods.get().call();\n\n    // Update state with the result.\n    this.setState({ storageValue: response});\n\n  };\n\n  getFoundationCapital = async () => {\n    const testnet = 'https://ropsten.infura.io/';\n    const walletAddress = '0x8690F1feff62008A396B31c2C3f380bD0Ca6d8b8';\n\n    const web3 = await getWeb3(testnet);\n    var balance = web3.eth.getBalance(walletAddress); //Will give value in.\n    balance = web3.toDecimal(balance);\n    console.log(balance);\n    this.setState({ storageValue: balance});\n  };\n\n  handleClick() {\n     console.log('this is:', this);\n   }\n\n\n  render() {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n\n\n\n    function ConnectionBox(){\n      return(\n        <div id=\"step1\" className=\"floatright bluebox\" hidden={false}>\n        <h2>Connect with MetaMask to claim your Universal Block Income</h2>\n        <MetaMaskButton onClick={(e) => console.log(\"connect Metamask btn clicked\")} >Connect with MetaMask</MetaMaskButton>\n        </div>\n      )\n    }\n\n    function ClaimBox() {\n    return (\n        <div id=\"step2\" className=\"floatright bluebox\" hidden={false}>\n        <h2>Your share</h2><img className=\"phone\" src={smartphone} alt=\"phone\"></img>\n        <h3>You will get approx. </h3>\n        <Button onClick={(e) => console.log(\"claim btn clicked\")}>Claim your DAI</Button>\n        </div>\n      );\n    }\n\n\n\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n\n            <h1>#UniversalBlockIncome</h1>\n\n            <div className=\"floatleft\">\n              <h2 className=\"tcenter\">Current foundation assets: <span className=\"cyan capital\">{this.state.storageValue}</span></h2>\n              <h3>You need money? Claim it. Every 24h.</h3>\n              <h3>You want to help? Donate. Temporary or permanently.</h3>\n            </div>\n\n\n            {window.web3\n            ? <ClaimBox/>\n            : <ConnectionBox/>\n            }\n\n\n        </div>\n      </div>\n      //end App\n\n\n\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}