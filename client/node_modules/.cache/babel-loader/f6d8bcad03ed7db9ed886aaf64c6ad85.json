{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('bowser')) : typeof define === 'function' && define.amd ? define('@rimble/utils', ['bowser'], factory) : (global = global || self, global.RimbleUtils = factory(global.Bowser));\n})(this, function (Bowser) {\n  'use strict';\n\n  Bowser = Bowser && Bowser.hasOwnProperty('default') ? Bowser['default'] : Bowser;\n  var funcs = {\n    browserIsWeb3Capable: function browserIsWeb3Capable() {\n      // User Agent\n      var browser = Bowser.getParser(window.navigator.userAgent);\n      var userAgent = browser.parse().parsedResult;\n      var validBrowser = browser.satisfies({\n        desktop: {\n          chrome: '>49',\n          firefox: '>52',\n          opera: '>36'\n        }\n      }) ? true : false;\n      var web3Capable = validBrowser || funcs.hasWeb3Available();\n      return web3Capable;\n    },\n    // Returns a network name based on a network ID\n    getEthNetworkNameById: function getEthNetworkNameById(networkId) {\n      var networkName = '';\n\n      if (typeof networkId === 'undefined') {\n        networkId = '';\n      }\n\n      switch (networkId) {\n        case 1:\n          networkName = 'Main';\n          break;\n\n        case 3:\n          networkName = 'Ropsten';\n          break;\n\n        case 4:\n          networkName = 'Rinkeby';\n          break;\n\n        case 5:\n          networkName = 'Goerli';\n          break;\n\n        case 42:\n          networkName = 'Kovan';\n          break;\n\n        case '':\n          networkName = 'None';\n          break;\n\n        default:\n          networkName = 'Custom';\n          break;\n      }\n\n      return networkName;\n    },\n    // Current browser is detected as mobile\n    isMobileDevice: function isMobileDevice() {\n      var mobilePlatform = /Mobi|Android/i.test(navigator.userAgent) ? true : false;\n      return mobilePlatform;\n    },\n    // Checks browser window for available web3 or ethereum objects\n    hasWeb3Available: function hasWeb3Available() {\n      var web3 = typeof window.web3 !== 'undefined';\n      var ethereum = typeof window.ethereum !== 'undefined';\n      var web3Available = web3 || ethereum;\n      return web3Available;\n    }\n  };\n  return funcs;\n});","map":null,"metadata":{},"sourceType":"script"}