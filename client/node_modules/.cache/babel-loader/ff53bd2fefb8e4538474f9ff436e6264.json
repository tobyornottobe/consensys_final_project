{"ast":null,"code":"import _defineProperty from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/toby/Desktop/H_FinalProject/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/toby/Desktop/H_FinalProject/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport { MetaMaskButton } from 'rimble-ui';\nimport { Button } from 'rimble-ui';\nimport smartphone from \"./img/smartphone.svg\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      storageValue: 1,\n      balance: 4,\n      web3: null,\n      accounts: null,\n      contract: null,\n      claimCount: 0,\n      claimAmount: 0,\n      loading: true\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _web, accounts, networkId, deployedNetwork, instance;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getWeb3();\n\n            case 3:\n              _web = _context.sent;\n              _context.next = 6;\n              return _web.eth.getAccounts();\n\n            case 6:\n              accounts = _context.sent;\n              _context.next = 9;\n              return _web.eth.net.getId();\n\n            case 9:\n              networkId = _context.sent;\n              deployedNetwork = SimpleStorageContract.networks[networkId];\n              instance = new _web.eth.Contract(SimpleStorageContract.abi, deployedNetwork && deployedNetwork.address); // Set web3, accounts, and contract to the state, and then proceed with an\n              // example of interacting with the contract's methods.\n\n              _this.setState({\n                web3: _web,\n                accounts: accounts,\n                contract: instance\n              }, _this.runExample);\n\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.error(_context.t0);\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 15]]);\n    }));\n    _this.runExample =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _this$state, accounts, contract, response;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$state = _this.state, accounts = _this$state.accounts, contract = _this$state.contract; // Stores a given value, 5 by default.\n\n              _context2.next = 3;\n              return contract.methods.set(5).send({\n                from: accounts[0]\n              });\n\n            case 3:\n              _context2.next = 5;\n              return contract.methods.get().call();\n\n            case 5:\n              response = _context2.sent;\n\n              // Update state with the result.\n              _this.setState({\n                storageValue: response\n              });\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _React$createElement, _React$createElement2;\n\n      // if (!this.state.web3) {\n      //   return <div>Loading Web3, accounts, and contract...</div>;\n      // }\n      function ConnectionBox() {\n        return React.createElement(\"div\", {\n          id: \"step1\",\n          class: \"floatright bluebox\",\n          hidden: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Connect with MetaMask to claim your Universal Block Income\"), React.createElement(MetaMaskButton, {\n          onClick: !this.state.web3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89\n          },\n          __self: this\n        }, \"Connect with MetaMask\"));\n      }\n\n      function ClaimBox() {\n        return React.createElement(\"div\", {\n          id: \"step2\",\n          class: \"floatright bluebox\",\n          hidden: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Your share\"), React.createElement(\"img\", {\n          class: \"phone\",\n          src: smartphone,\n          alt: \"phone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, \"You will get approx. \", this.state.balance), React.createElement(Button, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Claim your DAI\"));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"#UniversalBlockIncome\"), React.createElement(\"div\", {\n        class: \"floatleft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        class: \"tcenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Current foundation assets: \", React.createElement(\"span\", {\n        class: \"cyan capital\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, this.state.storageValue)), React.createElement(\"svg\", (_React$createElement = {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        className: \"cyan i\",\n        width: \"24\",\n        height: \"24\",\n        fill: \"none\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\"\n      }, _defineProperty(_React$createElement, \"className\", \"feather feather-user-minus\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"path\", {\n        d: \"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"circle\", {\n        cx: \"8.5\",\n        cy: \"7\",\n        r: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"path\", {\n        d: \"M23 11h-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"You need money? Claim it. Every 24h.\"), React.createElement(\"svg\", (_React$createElement2 = {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        className: \"cyan i\",\n        width: \"24\",\n        height: \"24\",\n        fill: \"none\",\n        \"stroke-width\": \"2\",\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\"\n      }, _defineProperty(_React$createElement2, \"className\", \"feather feather-user-plus\"), _defineProperty(_React$createElement2, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      }), _defineProperty(_React$createElement2, \"__self\", this), _React$createElement2), React.createElement(\"path\", {\n        d: \"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"circle\", {\n        cx: \"8.5\",\n        cy: \"7\",\n        r: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"path\", {\n        d: \"M20 8v6M23 11h-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"You want to help? Donate. Temporary or permanently.\")), web3.eth.getAccounts ? React.createElement(ConnectionBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }) : React.createElement(ClaimBox, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))) //end App\n      ;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/toby/Desktop/H_FinalProject/client/src/App.js"],"names":["React","Component","SimpleStorageContract","getWeb3","MetaMaskButton","Button","App","state","storageValue","balance","web3","accounts","contract","claimCount","claimAmount","loading","componentDidMount","eth","getAccounts","net","getId","networkId","deployedNetwork","networks","instance","Contract","abi","address","setState","runExample","alert","console","error","methods","set","send","from","get","call","response","ConnectionBox","ClaimBox","smartphone"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SimpleStorageContract from \"./contracts/SimpleStorage.json\";\nimport getWeb3 from \"./utils/getWeb3\";\n\nimport { MetaMaskButton } from 'rimble-ui';\nimport { Button } from 'rimble-ui';\n\n\n\nimport smartphone from './img/smartphone.svg';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  state = {\n      storageValue: 1,\n      balance: 4,\n      web3: null,\n      accounts: null,\n      contract: null,\n      claimCount: 0,\n      claimAmount: 0,\n      loading: true\n\n    };\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n\n\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n    //  this.setState({ account: accounts[0]})\n\n      // Get the contract instance.\n      const networkId = await web3.eth.net.getId();\n      const deployedNetwork = SimpleStorageContract.networks[networkId];\n      const instance = new web3.eth.Contract(\n        SimpleStorageContract.abi,\n        deployedNetwork && deployedNetwork.address,\n\n      );\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n        this.setState({ web3, accounts, contract: instance }, this.runExample);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n\n  runExample = async () => {\n    const { accounts, contract } = this.state;\n\n    // Stores a given value, 5 by default.\n    await contract.methods.set(5).send({ from: accounts[0] });\n\n    // Get the value from the contract to prove it worked.\n    const response = await contract.methods.get().call();\n\n    // Update state with the result.\n    this.setState({ storageValue: response});\n\n\n  };\n\n\n\n\n  render() {\n    // if (!this.state.web3) {\n    //   return <div>Loading Web3, accounts, and contract...</div>;\n    // }\n\n    function ConnectionBox(){\n      return(\n        <div id=\"step1\" class=\"floatright bluebox\" hidden={false}>\n        <h2>Connect with MetaMask to claim your Universal Block Income</h2>\n        <MetaMaskButton onClick={!this.state.web3}>Connect with MetaMask</MetaMaskButton>\n        </div>\n      )\n    }\n\n    function ClaimBox() {\n    return (\n        <div id=\"step2\" class=\"floatright bluebox\" hidden={false}>\n        <h2>Your share</h2><img class=\"phone\" src={smartphone} alt=\"phone\"></img>\n        <h3>You will get approx. {this.state.balance}</h3>\n        <Button>Claim your DAI</Button>\n        </div>\n      );\n    }\n\n\n\n\n    return (\n      <div className=\"App\">\n        <div class=\"container\">\n\n            <h1>#UniversalBlockIncome</h1>\n\n            <div class=\"floatleft\">\n              <h2 class=\"tcenter\">Current foundation assets: <span class=\"cyan capital\">{this.state.storageValue}</span></h2>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"cyan i\" width=\"24\" height=\"24\" fill=\"none\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"feather feather-user-minus\"><path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/><circle cx=\"8.5\" cy=\"7\" r=\"4\"/><path d=\"M23 11h-6\"/></svg>\n              <h3>You need money? Claim it. Every 24h.</h3>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"cyan i\" width=\"24\" height=\"24\" fill=\"none\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" className=\"feather feather-user-plus\"><path d=\"M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"/><circle cx=\"8.5\" cy=\"7\" r=\"4\"/><path d=\"M20 8v6M23 11h-6\"/></svg>\n              <h3>You want to help? Donate. Temporary or permanently.</h3>\n            </div>\n\n\n            {web3.eth.getAccounts\n            ? <ConnectionBox/>\n            : <ClaimBox/>\n            }\n\n\n        </div>\n      </div>\n      //end App\n\n\n\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}