{"ast":null,"code":"import _regeneratorRuntime from \"/Users/toby/Desktop/G_FinalProject/consensys_final_project/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/toby/Desktop/G_FinalProject/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/toby/Desktop/G_FinalProject/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/toby/Desktop/G_FinalProject/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/toby/Desktop/G_FinalProject/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/toby/Desktop/G_FinalProject/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/toby/Desktop/G_FinalProject/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/toby/Desktop/G_FinalProject/consensys_final_project/client/src/MyComponent.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { MetaMaskButton } from 'rimble-ui';\nimport { Button } from 'rimble-ui';\nimport { QR } from 'rimble-ui';\nimport smartphone from \"./img/smartphone.svg\";\n\nvar MyComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyComponent, _Component);\n\n  function MyComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      foundationCapital: 14,\n      beneficiaries: 1,\n      interest: 0,\n      claimed: false,\n      claimTime: \"\",\n      claimCount: 0,\n      claimAmount: 14.99,\n      isButtonDisabled: false,\n      connected: false,\n      deposited: false,\n      beneficiaryAdded: false,\n      loading: true\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, contract, web3, accounts, balance;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, contract = _this$props.contract, web3 = _this$props.web3, accounts = _this$props.accounts; //Get balance of foundation account\n\n              _context.next = 3;\n              return web3.eth.getBalance(contract.options.address);\n\n            case 3:\n              balance = _context.sent;\n\n              //Will give value of the foundation capital in.\n              //const balance = await contract.methods.balanceOf().call({from: accounts[0]});\n              //const numBN = web3.utils.toBN(balance);\n              //const num = web3.utils.fromWei(balance, \"ether\");\n              _this.setState({\n                foundationCapital: balance\n              }); //Calculate interest and share for each beneficiary\n\n\n              _this.setState(function (_ref2) {\n                var interest = _ref2.interest;\n                return {\n                  interest: _this.state.foundationCapital * 0.1499\n                };\n              });\n\n              if (_this.state.beneficiaries > 0) {\n                _this.setState(function (_ref3) {\n                  var interest = _ref3.interest;\n                  return {\n                    claimAmount: _this.state.interest / _this.state.beneficiaries\n                  };\n                });\n              }\n              /*  } catch (error) {\n                    // Catch any errors for any of the above operations.\n                    alert(\n                      `Failed to load web3, accounts, or contract. Check console for details.`,\n                    );\n                    console.error(error);\n                  }*/\n\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.connectMM =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return window.ethereum.enable();\n\n            case 2:\n              //await needs async\n              _this.setState({\n                connected: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.deposit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      var _this$props2, accounts, contract, web3, deposit;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$props2 = _this.props, accounts = _this$props2.accounts, contract = _this$props2.contract, web3 = _this$props2.web3;\n              _context3.next = 3;\n              return contract.methods.deposit().send({\n                value: web3.utils.toBN(5000000000000000000),\n                from: accounts[0],\n                gasLimit: 100000\n              });\n\n            case 3:\n              deposit = _context3.sent;\n\n              _this.setState({\n                deposited: true\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    _this.addBeneficiary =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var _this$props3, accounts, contract, addBeneficiary;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this$props3 = _this.props, accounts = _this$props3.accounts, contract = _this$props3.contract; //Add user as beneficiary\n\n              _context4.next = 3;\n              return contract.methods.addBeneficiary(accounts[0]).send({\n                from: accounts[0],\n                gasLimit: 100000\n              });\n\n            case 3:\n              addBeneficiary = _context4.sent;\n\n              _this.setState({\n                beneficiaryAdded: true\n              });\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n    _this.withdraw =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var claimAmount, _this$props4, accounts, contract, web3, withdraw, date, timestamp;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              //Trigger beneficiary withdrawal\n              claimAmount = _this.state.claimAmount;\n              _this$props4 = _this.props, accounts = _this$props4.accounts, contract = _this$props4.contract, web3 = _this$props4.web3;\n              _context5.next = 4;\n              return contract.methods.withdraw().send({\n                from: contract.options.address,\n                to: accounts[0]\n              });\n\n            case 4:\n              withdraw = _context5.sent;\n\n              //Increase the beneficiary count and disable button for 24hours\n              _this.setState(function (_ref8) {\n                var claimCount = _ref8.claimCount,\n                    claimed = _ref8.claimed,\n                    isButtonDisabled = _ref8.isButtonDisabled;\n                return {\n                  claimCount: claimCount + 1,\n                  claimed: true,\n                  isButtonDisabled: true\n                };\n              }); //Display time of last claim\n\n\n              date = new Date();\n              timestamp = date.toTimeString();\n\n              _this.setState(function (_ref9) {\n                var claimTime = _ref9.claimTime;\n                return {\n                  claimTime: timestamp\n                };\n              });\n\n              _this.state.beneficiaries += 1; //disable button for 24hours\n\n              /*  window.setTimeout(function () {\n                     this.setState({\n                         isButtonDisabled: false,\n                     })\n                 },5000)*/\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n    return _this;\n  }\n\n  _createClass(MyComponent, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      console.log('this is:', this);\n    }\n  }, {\n    key: \"renderConnectionBox\",\n    value: function renderConnectionBox() {\n      return React.createElement(\"div\", {\n        id: \"step1\",\n        className: \"floatright bluebox\",\n        hidden: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Connect with MetaMask to claim your Universal Block Income\"), React.createElement(MetaMaskButton, {\n        onClick: this.connectMM,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Connect with MetaMask\"));\n    }\n  }, {\n    key: \"renderClaimBox\",\n    value: function renderClaimBox() {\n      var accounts = this.props.accounts; //console.log(this.state.claimed)\n      //console.log(this.state.claimAmount)\n      //console.log(this.state.claimTime)\n\n      if (this.beneficiaryAdded = true) {\n        return React.createElement(\"div\", {\n          id: \"step2\",\n          className: \"floatright bluebox\",\n          hidden: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Your share\"), React.createElement(\"img\", {\n          className: \"phone\",\n          src: smartphone,\n          alt: \"phone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, \"Today's interest of \", this.state.interest, \" ETH, divided by \", this.state.beneficiaries, \" beneficiaries:  \"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \"With this account \", React.createElement(\"small\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, accounts), \" you can claim approx. \", React.createElement(\"span\", {\n          className: \"bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, \" \", this.state.claimAmount, \" ETH\"), \", today.\"), React.createElement(Button, {\n          onClick: this.withdraw,\n          disabled: this.state.isButtonDisabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"Claim it\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, this.state.claimed ? \"Claimed on \" : \" \", this.state.claimTime));\n      } else if (this.beneficiaryAdded = false) {\n        return React.createElement(\"div\", {\n          id: \"step2\",\n          className: \"floatright bluebox\",\n          hidden: false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, \"To claim your share...\"), React.createElement(\"img\", {\n          className: \"phone\",\n          src: smartphone,\n          alt: \"phone\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, \"...add yourself to the beneficiary database.\"), React.createElement(Button, {\n          onClick: this.addBeneficiary,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, \"Add now\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, this.state.claimed ? \"Claimed on \" : \" \", this.state.claimTime));\n      }\n    }\n  }, {\n    key: \"renderDonateBox\",\n    value: function renderDonateBox() {\n      var contract = this.props.contract;\n      return React.createElement(\"div\", {\n        id: \"step3\",\n        className: \"floatright bluebox\",\n        hidden: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Donate to this address\"), React.createElement(QR, {\n        value: contract.options.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: this.deposit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Donate 5 ETH\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"#UniversalBlockIncome\"), React.createElement(\"div\", {\n        className: \"floatleft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"tcenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Current foundation assets: \", React.createElement(\"span\", {\n        className: \"cyan capital\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, this.state.foundationCapital, \" ETH\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"You need money? Claim it. Every 24h.\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"You want to help? \", React.createElement(\"span\", {\n        onClick: this.renderDonateBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Donate\"), \". Temporary or permanently.\")), window.ethereum.selectedAddress ? this.renderClaimBox() : this.renderConnectionBox());\n    }\n  }]);\n\n  return MyComponent;\n}(Component);\n\nexport default MyComponent;","map":{"version":3,"sources":["/Users/toby/Desktop/G_FinalProject/consensys_final_project/client/src/MyComponent.js"],"names":["React","Component","Fragment","MetaMaskButton","Button","QR","MyComponent","state","foundationCapital","beneficiaries","interest","claimed","claimTime","claimCount","claimAmount","isButtonDisabled","connected","deposited","beneficiaryAdded","loading","componentDidMount","props","contract","web3","accounts","eth","getBalance","options","address","balance","setState","connectMM","window","ethereum","enable","deposit","methods","send","value","utils","toBN","from","gasLimit","addBeneficiary","withdraw","to","date","Date","timestamp","toTimeString","console","log","smartphone","renderDonateBox","selectedAddress","renderClaimBox","renderConnectionBox"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\n\nimport { MetaMaskButton } from 'rimble-ui';\nimport { Button } from 'rimble-ui';\nimport { QR } from 'rimble-ui';\n\nimport smartphone from './img/smartphone.svg';\n\nclass MyComponent extends Component {\n\n  state = {\n      foundationCapital: 14,\n      beneficiaries: 1,\n      interest: 0,\n      claimed: false,\n      claimTime: \"\",\n      claimCount: 0,\n      claimAmount: 14.99,\n      isButtonDisabled: false,\n      connected: false,\n      deposited: false,\n      beneficiaryAdded: false,\n      loading: true\n\n    };\n\n  handleClick() {\n      console.log('this is:', this);\n  }\n\n  componentDidMount = async () => {\n      const { contract, web3, accounts } = this.props;\n\n      //Get balance of foundation account\n      var balance = await web3.eth.getBalance(contract.options.address); //Will give value of the foundation capital in.\n      //const balance = await contract.methods.balanceOf().call({from: accounts[0]});\n      //const numBN = web3.utils.toBN(balance);\n      //const num = web3.utils.fromWei(balance, \"ether\");\n\n      this.setState({ foundationCapital: balance});\n\n      //Calculate interest and share for each beneficiary\n      this.setState(({ interest }) => ({ interest : this.state.foundationCapital * 0.1499}));\n      if(this.state.beneficiaries > 0){\n          this.setState(({ interest }) => ({ claimAmount : this.state.interest / this.state.beneficiaries}));\n      }\n\n/*  } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }*/\n  };\n\n  connectMM = async () => {\n      await window.ethereum.enable();//await needs async\n      this.setState({ connected: true });\n  }\n\n  deposit = async () => {\n      const { accounts, contract, web3 } = this.props;\n      const deposit = await contract.methods.deposit().send({ value: web3.utils.toBN(5000000000000000000), from: accounts[0], gasLimit: 100000});\n      this.setState({ deposited: true });\n  }\n\n  addBeneficiary = async () => {\n      const { accounts, contract } = this.props;\n      //Add user as beneficiary\n      const addBeneficiary = await contract.methods.addBeneficiary(accounts[0]).send({from: accounts[0], gasLimit: 100000});\n      this.setState({ beneficiaryAdded: true });\n  }\n\n\n\n  withdraw = async () => {\n\n      //Trigger beneficiary withdrawal\n      const { claimAmount } = this.state;\n      const { accounts, contract, web3 } = this.props;\n\n      const withdraw = await contract.methods.withdraw().send({ from: contract.options.address, to: accounts[0]})\n\n      //Increase the beneficiary count and disable button for 24hours\n      this.setState(({ claimCount, claimed, isButtonDisabled }) => ({ claimCount : claimCount + 1, claimed : true, isButtonDisabled: true}))\n\n      //Display time of last claim\n      let date = new Date();\n      let timestamp = date.toTimeString();\n      this.setState(({ claimTime }) => ({ claimTime : timestamp}))\n      this.state.beneficiaries += 1;\n\n\n      //disable button for 24hours\n    /*  window.setTimeout(function () {\n           this.setState({\n               isButtonDisabled: false,\n           })\n       },5000)*/\n\n    }\n\n\n\n\n  renderConnectionBox(){\n         return(\n           <div id=\"step1\" className=\"floatright bluebox\" hidden={false}>\n           <h2>Connect with MetaMask to claim your Universal Block Income</h2>\n           <MetaMaskButton onClick={this.connectMM} >Connect with MetaMask</MetaMaskButton>\n           </div>\n         )\n       }\n\n  renderClaimBox() {\n      const { accounts } = this.props;\n      //console.log(this.state.claimed)\n      //console.log(this.state.claimAmount)\n      //console.log(this.state.claimTime)\n      if(this.beneficiaryAdded = true){\n        return (\n            <div id=\"step2\" className=\"floatright bluebox\" hidden={false}>\n            <h2>Your share</h2><img className=\"phone\" src={smartphone} alt=\"phone\"></img>\n            <p>Today's interest of {this.state.interest} ETH, divided by {this.state.beneficiaries} beneficiaries:  </p>\n            <p>With this account <small>{accounts}</small> you can claim approx. <span className=\"bold\"> {this.state.claimAmount} ETH</span>, today.</p>\n\n            <Button onClick={this.withdraw} disabled={this.state.isButtonDisabled}>Claim it</Button>\n\n            <p>{this.state.claimed ? \"Claimed on \" : \" \"}{this.state.claimTime}</p>\n            </div>\n          );\n      } else if (this.beneficiaryAdded = false) {\n\n          return (\n              <div id=\"step2\" className=\"floatright bluebox\" hidden={false}>\n              <h2>To claim your share...</h2><img className=\"phone\" src={smartphone} alt=\"phone\"></img>\n              <p>...add yourself to the beneficiary database.</p>\n\n              <Button onClick={this.addBeneficiary}>Add now</Button>\n\n\n              <p>{this.state.claimed ? \"Claimed on \" : \" \"}{this.state.claimTime}</p>\n              </div>\n            );\n      }\n\n  }\n\n  renderDonateBox(){\n      const { contract } = this.props;\n      return(\n          <div id=\"step3\" className=\"floatright bluebox\" hidden={false}>\n          <h2>Donate to this address</h2>\n          <QR value={contract.options.address} />\n          <Button onClick={this.deposit}>Donate 5 ETH</Button>\n          </div>\n      );\n  }\n\n  render() {\n    return (\n      <Fragment>\n            <h1>#UniversalBlockIncome</h1>\n\n            <div className=\"floatleft\">\n              <h2 className=\"tcenter\">Current foundation assets: <span className=\"cyan capital\">{this.state.foundationCapital} ETH</span></h2>\n              <h3>You need money? Claim it. Every 24h.</h3>\n              <h3>You want to help? <span onClick={this.renderDonateBox}>Donate</span>. Temporary or permanently.</h3>\n\n            </div>\n            {window.ethereum.selectedAddress\n            ? this.renderClaimBox()\n            : this.renderConnectionBox()\n            }\n      </Fragment>\n    );\n  }\n}\n\n\n\nexport default MyComponent;\n"]},"metadata":{},"sourceType":"module"}