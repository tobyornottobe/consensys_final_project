{"ast":null,"code":"import _regeneratorRuntime from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/src/MyComponent.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { MetaMaskButton } from 'rimble-ui';\nimport { Button } from 'rimble-ui';\nimport { QR } from 'rimble-ui';\nimport smartphone from \"./img/smartphone.svg\";\n\nvar MyComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MyComponent, _Component);\n\n  function MyComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MyComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MyComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      foundationCapital: 14,\n      beneficiaries: 1,\n      interest: 0,\n      claimed: false,\n      claimTime: \"\",\n      claimCount: 0,\n      claimAmount: 14.99,\n      isButtonDisabled: false,\n      deposited: false,\n      connected: false,\n      beneficiaryAdded: false,\n      loading: true,\n      showDonateBox: false\n    };\n    _this.foundationCapital =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$props, contract, web3, accounts, balance, num;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, contract = _this$props.contract, web3 = _this$props.web3, accounts = _this$props.accounts; //Get balance of foundation account\n\n              _context.next = 3;\n              return web3.eth.getBalance(contract.options.address);\n\n            case 3:\n              balance = _context.sent;\n              //Will give value of the foundation capital in.\n              num = web3.utils.fromWei(balance, \"ether\");\n\n              _this.setState({\n                foundationCapital: num\n              }); //const balance = await contract.methods.balanceOf().call({from: accounts[0]});\n              //const numBN = web3.utils.toBN(balance);\n              //Calculate interest and share for each beneficiary\n\n\n              _this.setState(function (_ref2) {\n                var interest = _ref2.interest;\n                return {\n                  interest: _this.state.foundationCapital * 0.1499\n                };\n              });\n\n              if (_this.state.beneficiaries > 0) {\n                _this.setState(function (_ref3) {\n                  var interest = _ref3.interest;\n                  return {\n                    claimAmount: _this.state.interest / _this.state.beneficiaries\n                  };\n                });\n              }\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this.foundationCapital();\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    _this.connectMM =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return window.ethereum.enable();\n\n            case 2:\n              //await needs async\n              _this.setState({\n                connected: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, this);\n    }));\n    _this.addBeneficiary =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var _this$props2, accounts, contract, addBeneficiary;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _this$props2 = _this.props, accounts = _this$props2.accounts, contract = _this$props2.contract;\n              _context4.next = 3;\n              return contract.methods.addBeneficiary(accounts[0]).send({\n                from: accounts[0],\n                gasLimit: 100000\n              });\n\n            case 3:\n              addBeneficiary = _context4.sent;\n\n              _this.setState({\n                beneficiaryAdded: true\n              });\n\n            case 5:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this);\n    }));\n    _this.withdraw =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5() {\n      var claimAmount, _this$props3, accounts, contract, web3, withdraw, date, timestamp;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              //Trigger beneficiary withdrawal\n              claimAmount = _this.state.claimAmount;\n              _this$props3 = _this.props, accounts = _this$props3.accounts, contract = _this$props3.contract, web3 = _this$props3.web3;\n              console.log(contract.options.address);\n              _context5.next = 5;\n              return contract.methods.withdraw().send({\n                from: accounts[0],\n                gasLimit: 100000\n              });\n\n            case 5:\n              withdraw = _context5.sent;\n\n              //Increase the beneficiary count and disable button for 24hours\n              _this.setState(function (_ref8) {\n                var claimCount = _ref8.claimCount,\n                    claimed = _ref8.claimed,\n                    isButtonDisabled = _ref8.isButtonDisabled;\n                return {\n                  claimCount: claimCount + 1,\n                  claimed: true,\n                  isButtonDisabled: true\n                };\n              }); //Display time of last claim\n\n\n              date = new Date();\n              timestamp = date.toTimeString();\n\n              _this.setState(function (_ref9) {\n                var claimTime = _ref9.claimTime;\n                return {\n                  claimTime: timestamp\n                };\n              });\n\n              _this.state.beneficiaries += 1;\n\n            case 11:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n    _this.deposit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6() {\n      var _this$props4, accounts, contract, web3, deposit;\n\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _this$props4 = _this.props, accounts = _this$props4.accounts, contract = _this$props4.contract, web3 = _this$props4.web3;\n              _context6.next = 3;\n              return contract.methods.deposit().send({\n                value: web3.utils.toBN(5000000000000000000),\n                from: accounts[0],\n                gasLimit: 100000\n              });\n\n            case 3:\n              deposit = _context6.sent;\n              _context6.next = 6;\n              return _this.foundationCapital();\n\n            case 6:\n              _this.setState({\n                deposited: true,\n                showDonateBox: false\n              });\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n    return _this;\n  }\n\n  _createClass(MyComponent, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      console.log('this is:', this);\n    }\n  }, {\n    key: \"renderConnectionBox\",\n    value: function renderConnectionBox() {\n      if (window.ethereum.selectedAddress) return null;\n      return React.createElement(\"div\", {\n        id: \"step1\",\n        className: \"floatright bluebox\",\n        hidden: this.state.showConnectionBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Connect with MetaMask to claim your Universal Block Income\"), React.createElement(MetaMaskButton, {\n        onClick: this.connectMM,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Connect with MetaMask\"));\n    }\n  }, {\n    key: \"renderRegistrationBox\",\n    value: function renderRegistrationBox() {\n      if (this.state.beneficiaryAdded) return null;\n      if (!window.ethereum.selectedAddress) return null;\n      return React.createElement(\"div\", {\n        id: \"step3\",\n        className: \"floatright bluebox\",\n        hidden: this.state.showRegistrationBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"To claim your share...\"), React.createElement(\"img\", {\n        className: \"phone\",\n        src: smartphone,\n        alt: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"...register to the beneficiary database. Registration is only necessary once.\"), React.createElement(Button, {\n        onClick: this.addBeneficiary,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Register\"));\n    }\n  }, {\n    key: \"renderClaimBox\",\n    value: function renderClaimBox() {\n      if (!this.state.beneficiaryAdded) return null;\n      var accounts = this.props.accounts;\n      return React.createElement(\"div\", {\n        id: \"step2\",\n        className: \"floatright bluebox\",\n        hidden: this.state.showClaimBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Your share\"), React.createElement(\"img\", {\n        className: \"phone\",\n        src: smartphone,\n        alt: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Today's interest of \", this.state.interest, \" ETH, divided by \", this.state.beneficiaries, \" beneficiaries:  \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"With this account \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, accounts), \" you can claim approx. \", React.createElement(\"span\", {\n        className: \"bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \" \", this.state.claimAmount, \" ETH\"), \", today.\"), React.createElement(Button, {\n        onClick: this.withdraw,\n        disabled: this.state.isButtonDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Claim it\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, this.state.claimed ? \"Claimed on \" : \" \", this.state.claimTime));\n    }\n  }, {\n    key: \"renderDonateBox\",\n    value: function renderDonateBox() {\n      var contract = this.props.contract;\n      if (!this.state.showDonateBox) return null;\n      return React.createElement(\"div\", {\n        id: \"step4\",\n        className: \"floatright bluebox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Donate to this address\"), React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(QR, {\n        value: contract.options.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, contract.options.address), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \" \"), React.createElement(Button, {\n        onClick: this.deposit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Donate 5 ETH\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"#UniversalBlockIncome\"), React.createElement(\"div\", {\n        className: \"floatleft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"tcenter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Current foundation assets: \", React.createElement(\"span\", {\n        className: \"cyan capital\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, this.state.foundationCapital, \" ETH\")), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"You need money? Claim it. Every 24h.\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"You want to help? \", React.createElement(\"a\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            showDonateBox: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Donate\"), \". Temporary or permanently.\")), this.renderConnectionBox(), this.renderRegistrationBox(), this.renderClaimBox(), this.renderDonateBox());\n    }\n  }]);\n\n  return MyComponent;\n}(Component);\n\nexport default MyComponent;","map":{"version":3,"sources":["/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/src/MyComponent.js"],"names":["React","Component","Fragment","MetaMaskButton","Button","QR","MyComponent","state","foundationCapital","beneficiaries","interest","claimed","claimTime","claimCount","claimAmount","isButtonDisabled","deposited","connected","beneficiaryAdded","loading","showDonateBox","props","contract","web3","accounts","eth","getBalance","options","address","balance","num","utils","fromWei","setState","componentDidMount","connectMM","window","ethereum","enable","addBeneficiary","methods","send","from","gasLimit","withdraw","console","log","date","Date","timestamp","toTimeString","deposit","value","toBN","selectedAddress","showConnectionBox","showRegistrationBox","smartphone","showClaimBox","renderConnectionBox","renderRegistrationBox","renderClaimBox","renderDonateBox"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\n\nimport { MetaMaskButton } from 'rimble-ui';\nimport { Button } from 'rimble-ui';\nimport { QR } from 'rimble-ui';\n\nimport smartphone from './img/smartphone.svg';\n\nclass MyComponent extends Component {\n\n  state = {\n      foundationCapital: 14,\n      beneficiaries: 1,\n      interest: 0,\n      claimed: false,\n      claimTime: \"\",\n      claimCount: 0,\n      claimAmount: 14.99,\n      isButtonDisabled: false,\n      deposited: false,\n      connected: false,\n      beneficiaryAdded: false,\n      loading: true,\n      showDonateBox:false,\n\n    };\n\n  handleClick() {\n      console.log('this is:', this);\n  }\n\n foundationCapital = async () => {\n   const { contract, web3, accounts } = this.props;\n\n     //Get balance of foundation account\n     var balance = await web3.eth.getBalance(contract.options.address); //Will give value of the foundation capital in.\n     const num = web3.utils.fromWei(balance, \"ether\");\n     this.setState({ foundationCapital: num});\n     //const balance = await contract.methods.balanceOf().call({from: accounts[0]});\n     //const numBN = web3.utils.toBN(balance);\n\n     //Calculate interest and share for each beneficiary\n     this.setState(({ interest }) => ({ interest : this.state.foundationCapital * 0.1499}));\n     if(this.state.beneficiaries > 0){\n         this.setState(({ interest }) => ({ claimAmount : this.state.interest / this.state.beneficiaries}));\n     }\n\n }\n\n\n  componentDidMount = async () => {\n    await this.foundationCapital();\n  };\n\n  //connect to MetaMask\n  connectMM = async () => {\n      await window.ethereum.enable();//await needs async\n      this.setState({ connected: true });\n  }\n\n  //add a beneficiary to the mapping\n  addBeneficiary = async () => {\n      const { accounts, contract } = this.props;\n      const addBeneficiary = await contract.methods.addBeneficiary(accounts[0]).send({from: accounts[0], gasLimit: 100000});\n      this.setState({ beneficiaryAdded: true });\n  }\n\n\n  //beneficiary can withdraw UBI amount\n  withdraw = async () => {\n\n    //Trigger beneficiary withdrawal\n    const { claimAmount } = this.state;\n    const { accounts, contract, web3 } = this.props;\n    console.log(contract.options.address);\n\n    const withdraw = await contract.methods.withdraw().send({ from: accounts[0], gasLimit: 100000})\n\n    //Increase the beneficiary count and disable button for 24hours\n    this.setState(({ claimCount, claimed, isButtonDisabled }) => ({ claimCount : claimCount + 1, claimed : true, isButtonDisabled: true}))\n\n    //Display time of last claim\n    let date = new Date();\n    let timestamp = date.toTimeString();\n    this.setState(({ claimTime }) => ({ claimTime : timestamp}))\n    this.state.beneficiaries += 1;\n    }\n\n  //deposit amount to UBI contract address\n  deposit = async () => {\n    const { accounts, contract, web3 } = this.props;\n    const deposit = await contract.methods.deposit().send({ value: web3.utils.toBN(5000000000000000000), from: accounts[0], gasLimit: 100000});\n    await this.foundationCapital();\n    this.setState({ deposited: true, showDonateBox: false });\n    }\n\n\n    renderConnectionBox(){\n      if(window.ethereum.selectedAddress) return null;\n\n      return(\n         <div id=\"step1\" className=\"floatright bluebox\" hidden={this.state.showConnectionBox}>\n         <h2>Connect with MetaMask to claim your Universal Block Income</h2>\n         <MetaMaskButton onClick={this.connectMM} >Connect with MetaMask</MetaMaskButton>\n         </div>\n      )\n  }\n\n  renderRegistrationBox(){\n    if(this.state.beneficiaryAdded) return null;\n    if(!window.ethereum.selectedAddress) return null;\n     return (\n          <div id=\"step3\" className=\"floatright bluebox\" hidden={this.state.showRegistrationBox}>\n          <h2>To claim your share...</h2><img className=\"phone\" src={smartphone} alt=\"phone\"></img>\n          <p>...register to the beneficiary database. Registration is only necessary once.</p>\n\n          <Button onClick={this.addBeneficiary}>Register</Button>\n\n          </div>\n      );\n  }\n\n  renderClaimBox(){\n      if(!this.state.beneficiaryAdded) return null;\n      const { accounts } = this.props;\n      return (\n            <div id=\"step2\" className=\"floatright bluebox\" hidden={this.state.showClaimBox}>\n            <h2>Your share</h2><img className=\"phone\" src={smartphone} alt=\"phone\"></img>\n            <p>Today's interest of {this.state.interest} ETH, divided by {this.state.beneficiaries} beneficiaries:  </p>\n            <p>With this account <small>{accounts}</small> you can claim approx. <span className=\"bold\"> {this.state.claimAmount} ETH</span>, today.</p>\n\n            <Button onClick={this.withdraw} disabled={this.state.isButtonDisabled}>Claim it</Button>\n\n            <p>{this.state.claimed ? \"Claimed on \" : \" \"}{this.state.claimTime}</p>\n            </div>\n          );\n  }\n\n\n\n  renderDonateBox(){\n      const { contract } = this.props;\n      if(!this.state.showDonateBox) return null;\n\n      return(\n          <div id=\"step4\" className=\"floatright bluebox\">\n          <h2>Donate to this address</h2>\n          <div className=\"center\"><QR value={contract.options.address} /></div>\n          <small>{contract.options.address}</small>\n          <p> </p>\n          <Button onClick={this.deposit}>Donate 5 ETH</Button>\n          </div>\n      );\n  }\n\n  render() {\n    return (\n      <Fragment>\n            <h1>#UniversalBlockIncome</h1>\n\n            <div className=\"floatleft\">\n              <h2 className=\"tcenter\">Current foundation assets: <span className=\"cyan capital\">{this.state.foundationCapital} ETH</span></h2>\n              <h3>You need money? Claim it. Every 24h.</h3>\n              <h3>You want to help? <a onClick={() => this.setState({ showDonateBox: true})}>Donate</a>. Temporary or permanently.</h3>\n\n            </div>\n            {this.renderConnectionBox()}\n            {this.renderRegistrationBox()}\n            {this.renderClaimBox()}\n            {this.renderDonateBox()}\n\n      </Fragment>\n    );\n  }\n}\n\n\n\nexport default MyComponent;\n"]},"metadata":{},"sourceType":"module"}