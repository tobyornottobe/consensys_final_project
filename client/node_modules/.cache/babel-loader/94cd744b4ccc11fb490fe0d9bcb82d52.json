{"ast":null,"code":"import _regeneratorRuntime from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport UBIContract from \"./contracts/UBI.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport MyComponent from \"./MyComponent\";\nimport \"./App.css\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      web3: null,\n      accounts: [],\n      contract: null,\n      connected: false,\n      loading: true\n    };\n    _this.componentDidMount =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var web3, accounts, networkId, deployedNetwork, contract;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getWeb3();\n\n            case 3:\n              web3 = _context.sent;\n              _context.next = 6;\n              return web3.eth.getAccounts();\n\n            case 6:\n              accounts = _context.sent;\n              // Get the contract instance.\n              //const networkId = await web3.eth.net.getId();\n              networkId = 5777;\n              deployedNetwork = UBIContract.networks[networkId];\n              contract = new web3.eth.Contract(UBIContract.abi, deployedNetwork && deployedNetwork.address);\n\n              _this.setState({\n                accounts: accounts,\n                web3: web3,\n                contract: contract,\n                loading: false\n              });\n\n              _context.next = 17;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](0);\n              // Catch any errors for any of the above operations.\n              alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n              console.error(_context.t0);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 13]]);\n    }));\n    _this.connectMM =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return window.ethereum.enable();\n\n            case 2:\n              //await needs async\n              _this.setState({\n                connected: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleClick\",\n    value: function handleClick() {\n      console.log('this is:', this);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          contract = _this$state.contract,\n          web3 = _this$state.web3,\n          accounts = _this$state.accounts,\n          loading = _this$state.loading;\n\n      if (loading) {\n        return 'Loading...';\n      }\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(MyComponent, {\n        web3: web3,\n        contract: contract,\n        accounts: accounts,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }))) //end App\n      ;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/toby/Dropbox/SitesundIdeas/Techdegree-fsjs/techdegree-fsjs-project-1/consensys_final_project/client/src/App.js"],"names":["React","Component","UBIContract","getWeb3","MyComponent","App","state","web3","accounts","contract","connected","loading","componentDidMount","eth","getAccounts","networkId","deployedNetwork","networks","Contract","abi","address","setState","alert","console","error","connectMM","window","ethereum","enable","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,WAAP;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE,IADF;AAEJC,MAAAA,QAAQ,EAAE,EAFN;AAGJC,MAAAA,QAAQ,EAAE,IAHN;AAIJC,MAAAA,SAAS,EAAE,KAJP;AAKJC,MAAAA,OAAO,EAAE;AALL,K;UAYRC,iB;;;;6BAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGGT,OAAO,EAHV;;AAAA;AAGVI,cAAAA,IAHU;AAAA;AAAA,qBAMOA,IAAI,CAACM,GAAL,CAASC,WAAT,EANP;;AAAA;AAMVN,cAAAA,QANU;AAQhB;AACA;AACMO,cAAAA,SAVU,GAUE,IAVF;AAWVC,cAAAA,eAXU,GAWQd,WAAW,CAACe,QAAZ,CAAqBF,SAArB,CAXR;AAYVN,cAAAA,QAZU,GAYC,IAAIF,IAAI,CAACM,GAAL,CAASK,QAAb,CACfhB,WAAW,CAACiB,GADG,EAEfH,eAAe,IAAIA,eAAe,CAACI,OAFpB,CAZD;;AAiBhB,oBAAKC,QAAL,CAAc;AAAEb,gBAAAA,QAAQ,EAARA,QAAF;AAAYD,gBAAAA,IAAI,EAAJA,IAAZ;AAAkBE,gBAAAA,QAAQ,EAARA,QAAlB;AAA4BE,gBAAAA,OAAO,EAAE;AAArC,eAAd;;AAjBgB;AAAA;;AAAA;AAAA;AAAA;AAoBhB;AACAW,cAAAA,KAAK,0EAAL;AAGAC,cAAAA,OAAO,CAACC,KAAR;;AAxBgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;UA8BpBC,S;;;;6BAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEFC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAFE;;AAAA;AAEuB;AAC/B,oBAAKP,QAAL,CAAc;AAAEX,gBAAAA,SAAS,EAAE;AAAb,eAAd;;AAHQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;kCAlCI;AACXa,MAAAA,OAAO,CAACM,GAAR,CAAY,UAAZ,EAAwB,IAAxB;AACD;;;6BAsCK;AAAA,wBACuC,KAAKvB,KAD5C;AAAA,UACCG,QADD,eACCA,QADD;AAAA,UACWF,IADX,eACWA,IADX;AAAA,UACiBC,QADjB,eACiBA,QADjB;AAAA,UAC2BG,OAD3B,eAC2BA,OAD3B;;AAEP,UAAGA,OAAH,EAAY;AACV,eAAO,YAAP;AACD;;AAED,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,WAAD;AACI,QAAA,IAAI,EAAEJ,IADV;AAEI,QAAA,QAAQ,EAAEE,QAFd;AAGI,QAAA,QAAQ,EAAED,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADF,CADF,CAUE;AAVF;AAeD;;;;EAvEeP,S;;AA4ElB,eAAeI,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport UBIContract from \"./contracts/UBI.json\";\nimport getWeb3 from \"./utils/getWeb3\";\nimport MyComponent from \"./MyComponent\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  state = {\n      web3: null,\n      accounts: [],\n      contract: null,\n      connected: false,\n      loading: true\n  };\n\n    handleClick() {\n       console.log('this is:', this);\n     }\n\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts (e.g. Metamask account).\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n      //const networkId = await web3.eth.net.getId();\n      const networkId = 5777;\n      const deployedNetwork = UBIContract.networks[networkId];\n      const contract = new web3.eth.Contract(\n        UBIContract.abi,\n        deployedNetwork && deployedNetwork.address\n      );\n\n      this.setState({ accounts, web3, contract, loading: false })\n\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n  };\n\n\n\n  connectMM = async () =>\n    {\n      await window.ethereum.enable();//await needs async\n      this.setState({ connected: true })\n    }\n\n  render() {\n    const { contract, web3, accounts, loading } = this.state;\n    if(loading) {\n      return 'Loading...';\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n            <MyComponent\n                web3={web3}\n                contract={contract}\n                accounts={accounts}\n            />\n        </div>\n      </div>\n      //end App\n\n\n\n    );\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}