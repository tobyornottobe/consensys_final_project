{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react'), require('prop-types'), require('@rimble/utils'), require('rimble-ui')) : typeof define === 'function' && define.amd ? define('@rimble/connection-banner', ['react', 'prop-types', '@rimble/utils', 'rimble-ui'], factory) : (global = global || self, global['@rimble/connection-banner'] = factory(global.React, global.PropTypes, global.RimbleUtils, global.RimbleUi));\n})(this, function (React, PropTypes, RimbleUtils, rimbleUi) {\n  'use strict';\n\n  var React__default = 'default' in React ? React['default'] : React;\n  PropTypes = PropTypes && PropTypes.hasOwnProperty('default') ? PropTypes['default'] : PropTypes;\n  RimbleUtils = RimbleUtils && RimbleUtils.hasOwnProperty('default') ? RimbleUtils['default'] : RimbleUtils;\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n\n  function _getPrototypeOf(o) {\n    _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n      return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n\n  function _setPrototypeOf(o, p) {\n    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n\n    return _setPrototypeOf(o, p);\n  }\n\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n\n    return self;\n  }\n\n  function _possibleConstructorReturn(self, call) {\n    if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n      return call;\n    }\n\n    return _assertThisInitialized(self);\n  }\n\n  var WrongNetwork = function WrongNetwork(_ref) {\n    var currentNetwork = _ref.currentNetwork,\n        requiredNetwork = _ref.requiredNetwork,\n        onWrongNetworkMessage = _ref.onWrongNetworkMessage;\n    return React__default.createElement(\"div\", null, onWrongNetworkMessage === null ? // Show default banner\n    React__default.createElement(rimbleUi.Flash, {\n      variant: 'danger'\n    }, React__default.createElement(rimbleUi.Flex, {\n      alignItems: \"center\"\n    }, React__default.createElement(rimbleUi.Box, {\n      pr: 3\n    }, React__default.createElement(rimbleUi.Icon, {\n      name: \"Warning\",\n      size: \"44\"\n    })), React__default.createElement(rimbleUi.Flex, {\n      flexDirection: \"column\"\n    }, React__default.createElement(rimbleUi.Text, {\n      fontWeight: \"bold\",\n      color: 'inherit'\n    }, \"Switch to the\", ' ', RimbleUtils.getEthNetworkNameById(requiredNetwork), \" network in\", ' ', React__default.createElement(rimbleUi.Text, {\n      color: 'inherit',\n      fontWeight: 'inherit',\n      display: ['none', 'none', 'inline-block', 'inline-block']\n    }, \"MetaMask\"), React__default.createElement(rimbleUi.Text, {\n      color: 'inherit',\n      fontWeight: 'inherit',\n      display: ['inline-block', 'inline-block', 'none', 'none']\n    }, \"Settings\")), React__default.createElement(rimbleUi.Text, {\n      color: 'inherit'\n    }, \"To use our blockchain features, you need to be on the\", ' ', RimbleUtils.getEthNetworkNameById(requiredNetwork), \" network. You're currently on\", ' ', RimbleUtils.getEthNetworkNameById(currentNetwork), \".\")))) : // Show custom banner\n    onWrongNetworkMessage);\n  };\n\n  var NoNetwork = function NoNetwork(_ref2) {\n    var noNetworkAvailableMessage = _ref2.noNetworkAvailableMessage;\n    return React__default.createElement(\"div\", null, noNetworkAvailableMessage === null ? React__default.createElement(rimbleUi.Flash, {\n      variant: 'danger'\n    }, React__default.createElement(rimbleUi.Flex, {\n      alignItems: \"center\",\n      justifyContent: \"space-between\"\n    }, React__default.createElement(rimbleUi.Flex, {\n      alignItems: \"center\",\n      pr: '2'\n    }, React__default.createElement(rimbleUi.Box, {\n      pr: 3\n    }, React__default.createElement(rimbleUi.Icon, {\n      name: \"Warning\",\n      size: \"44\"\n    })), React__default.createElement(rimbleUi.Flex, {\n      flexDirection: \"column\"\n    }, React__default.createElement(rimbleUi.Text, {\n      fontWeight: \"bold\",\n      color: 'inherit'\n    }, \"Install the MetaMask browser extension to use our blockchain features in your current browser\"))), React__default.createElement(rimbleUi.MetaMaskButton, {\n      as: \"a\",\n      href: \"https://metamask.io/\",\n      target: \"_blank\"\n    }, \"Install MetaMask\"))) : noNetworkAvailableMessage);\n  };\n\n  var NotWeb3Browser = function NotWeb3Browser(_ref3) {\n    var notWeb3CapableBrowserMessage = _ref3.notWeb3CapableBrowserMessage;\n    return React__default.createElement(\"div\", null, notWeb3CapableBrowserMessage === null ? React__default.createElement(rimbleUi.Flash, {\n      variant: 'danger'\n    }, React__default.createElement(rimbleUi.Flex, {\n      alignItems: \"center\"\n    }, React__default.createElement(rimbleUi.Box, {\n      pr: 3\n    }, React__default.createElement(rimbleUi.Icon, {\n      name: \"Warning\",\n      size: \"44\"\n    })), React__default.createElement(rimbleUi.Flex, {\n      flexDirection: \"column\"\n    }, React__default.createElement(rimbleUi.Text, {\n      fontWeight: \"bold\",\n      color: 'inherit'\n    }, \"Your browser doesn't support our blockchain features\"), RimbleUtils.isMobileDevice() ? React__default.createElement(rimbleUi.Text, {\n      color: 'inherit'\n    }, \"Try a mobile wallet browser like Status, Coinbase wallet or Cipher\") : React__default.createElement(rimbleUi.Text, {\n      color: 'inherit'\n    }, \"Switch to either Brave, FireFox, Opera, or Chrome to continue\")))) : notWeb3CapableBrowserMessage);\n  };\n\n  var ConnectionBanner =\n  /*#__PURE__*/\n  function (_Component) {\n    _inherits(ConnectionBanner, _Component);\n\n    function ConnectionBanner() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, ConnectionBanner);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ConnectionBanner)).call.apply(_getPrototypeOf2, [this].concat(args)));\n      _this.state = {\n        isCorrectNetwork: null\n      };\n\n      _this.checkCorrectNetwork = function () {\n        var isCorrectNetwork = _this.props.currentNetwork === _this.props.requiredNetwork;\n\n        if (isCorrectNetwork !== _this.state.isCorrectNetwork) {\n          _this.setState({\n            isCorrectNetwork: isCorrectNetwork\n          });\n        }\n      };\n\n      return _this;\n    }\n\n    _createClass(ConnectionBanner, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        var browserIsWeb3Capable = RimbleUtils.browserIsWeb3Capable();\n        this.setState({\n          browserIsWeb3Capable: browserIsWeb3Capable\n        });\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate() {\n        if (this.props.currentNetwork && this.props.requiredNetwork) {\n          this.checkCorrectNetwork();\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            currentNetwork = _this$props.currentNetwork,\n            requiredNetwork = _this$props.requiredNetwork,\n            onWeb3Fallback = _this$props.onWeb3Fallback;\n        var _this$props$children = this.props.children,\n            notWeb3CapableBrowserMessage = _this$props$children.notWeb3CapableBrowserMessage,\n            noNetworkAvailableMessage = _this$props$children.noNetworkAvailableMessage,\n            onWrongNetworkMessage = _this$props$children.onWrongNetworkMessage;\n        return React__default.createElement(\"div\", null, this.state.browserIsWeb3Capable === false ? React__default.createElement(NotWeb3Browser, {\n          notWeb3CapableBrowserMessage: notWeb3CapableBrowserMessage\n        }) : onWeb3Fallback === true || currentNetwork === null ? React__default.createElement(NoNetwork, {\n          noNetworkAvailableMessage: noNetworkAvailableMessage\n        }) : this.state.isCorrectNetwork === false ? React__default.createElement(WrongNetwork, {\n          currentNetwork: currentNetwork,\n          requiredNetwork: requiredNetwork,\n          onWrongNetworkMessage: onWrongNetworkMessage\n        }) : null);\n      }\n    }]);\n\n    return ConnectionBanner;\n  }(React.Component);\n\n  ConnectionBanner.propTypes = {\n    currentNetwork: PropTypes.number,\n    requiredNetwork: PropTypes.number,\n    onWeb3Fallback: PropTypes.bool,\n    children: PropTypes.shape({\n      notWeb3CapableBrowserMessage: PropTypes.node,\n      noNetworkAvailableMessage: PropTypes.node,\n      onWrongNetworkMessage: PropTypes.node\n    })\n  };\n  ConnectionBanner.defaultProps = {\n    currentNetwork: null,\n    requiredNetwork: null,\n    onWeb3Fallback: false,\n    children: {\n      notWeb3CapableBrowserMessage: null,\n      noNetworkAvailableMessage: null,\n      onWrongNetworkMessage: null\n    }\n  };\n  return ConnectionBanner;\n});","map":null,"metadata":{},"sourceType":"script"}